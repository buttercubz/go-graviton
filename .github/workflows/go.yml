name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download go-langserver
      run: go get -u github.com/sourcegraph/go-langserver

    - name: Build go-langserver for Windows
      if: ${{ runner.os == 'Windows' }}
      run: go build -o go-langserver_win32.exe "github.com/sourcegraph/go-langserver"

    - name: Build go-langserver for Linux
      if: ${{ runner.os == 'Linux' }}
      run: go build -o go-langserver_linux "github.com/sourcegraph/go-langserver"

    - name: Build go-langserver for macOS
      if: ${{ runner.os == 'macOS' }}
      run: go build -o go-langserver_darwin "github.com/sourcegraph/go-langserver"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: go-langserver
        release_name: go-langserver
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./go-langserver
        asset_name: go-langserver
        asset_content_type: application/octet-stream
